{"version":3,"sources":["components/AddTask.js","components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/Footer.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["AddTask","onAdd","useState","text","setText","day","setDay","reminder","setReminder","className","onSubmit","e","preventDefault","alert","type","value","onChange","target","placeholder","checked","currentTarget","Button","color","onClick","style","backgroundColor","defaultProps","Header","title","showAdd","location","useLocation","pathname","Task","task","onDelete","onToggle","onDoubleClick","id","cursor","Tasks","tasks","map","Footer","to","About","App","showAddTask","setShowAddTask","setTasks","useEffect","a","fetchTasks","tasksFromServer","getTasks","fetch","res","json","data","fetchTask","addTask","method","headers","body","JSON","stringify","deleteTask","filter","toggleReminder","taskToToggle","updTask","path","exact","render","length","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.93e80b76.chunk.js","sourcesContent":["import { useState } from \"react\";\n\nconst AddTask = ({ onAdd }) => {\n  const [text, setText] = useState(\"\");\n  const [day, setDay] = useState(\"\");\n  const [reminder, setReminder] = useState(false);\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    if (!text) {\n      alert(\"Please add a task\");\n      return;\n    }\n\n    onAdd({ text, day, reminder });\n\n    setText(\"\");\n    setDay(\"\");\n    setReminder(false);\n  };\n\n  return (\n    <form className=\"add-form\" onSubmit={onSubmit}>\n      <div className=\"form-control\">\n        <label>Task</label>\n        <input\n          type=\"text\"\n          value={text}\n          onChange={(e) => setText(e.target.value)}\n          placeholder=\"Add Task\"\n        />\n      </div>\n      <div className=\"form-control\">\n        <label>Day & Time</label>\n        <input\n          type=\"text\"\n          value={day}\n          onChange={(e) => setDay(e.target.value)}\n          placeholder=\"Add Day & Time\"\n        />\n      </div>\n      <div className=\"form-control form-control-check\">\n        <label>Set Reminder</label>\n        <input\n          type=\"checkbox\"\n          checked={reminder}\n          value={reminder}\n          onChange={(e) => setReminder(e.currentTarget.checked)}\n        />\n      </div>\n\n      <input className=\"btn btn-block\" type=\"submit\" value=\"Save Task\" />\n    </form>\n  );\n};\n\nexport default AddTask;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction Button({ color, text, onClick }) {\n  return (\n    <button\n      onClick={onClick}\n      style={{ backgroundColor: color }}\n      className=\"btn\"\n    >\n      {text}\n    </button>\n  );\n}\n\nButton.defaultProps = {\n  color: \"steelblue\",\n};\n\nButton.propTypes = {\n  text: PropTypes.string,\n  color: PropTypes.string,\n  onClick: PropTypes.func,\n};\n\nexport default Button;\n","import PropTypes from \"prop-types\";\nimport Button from \"./Button\";\nimport { useLocation } from \"react-router-dom\";\n\nconst Header = ({ title, onAdd, showAdd }) => {\n  const location = useLocation();\n\n  return (\n    <header className=\"header\">\n      <h1>{title}</h1>\n      {location.pathname === \"/\" && (\n        <Button\n          color={showAdd ? \"red\" : \"green\"}\n          text={showAdd ? \"Close\" : \"App\"}\n          onClick={onAdd}\n        />\n      )}\n    </header>\n  );\n};\n\nHeader.defaultProps = {\n  title: \"Task Tracker\",\n};\n\nHeader.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default Header;\n","import { FaTimes } from \"react-icons/fa\";\n\nconst Task = ({ task, onDelete, onToggle }) => {\n  return (\n    <div\n      className={`task ${task.reminder ? \"reminder\" : \"\"}`}\n      onDoubleClick={() => onToggle(task.id)}\n    >\n      <h3>\n        {task.text}{\" \"}\n        <FaTimes\n          onClick={() => onDelete(task.id)}\n          style={{ color: \"red\", cursor: \"pointer\" }}\n        />\n      </h3>\n      <p>{task.day}</p>\n    </div>\n  );\n};\n\nexport default Task;\n","import Task from \"./Task\";\n\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\n  return (\n    <>\n      {tasks.map((task) => (\n        <Task\n          key={task.id}\n          task={task}\n          onDelete={onDelete}\n          onToggle={onToggle}\n        />\n      ))}\n    </>\n  );\n};\n\nexport default Tasks;\n","import { Link } from \"react-router-dom\";\n\nconst Footer = () => {\n  return (\n    <footer>\n      <p>Copyright &copy; 2021</p>\n      <Link to=\"/about\">About</Link>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import { Link } from \"react-router-dom\";\n\nconst About = () => {\n  return (\n    <div>\n      <h4>Version 1.0.0</h4>\n      <Link to=\"/\">Go Back</Link>\n    </div>\n  );\n};\n\nexport default About;\n","import { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport AddTask from \"./components/AddTask\";\nimport Header from \"./components/Header\";\nimport Tasks from \"./components/Tasks\";\nimport Footer from \"./components/Footer\";\nimport About from \"./components/About\";\n\nconst App = () => {\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [tasks, setTasks] = useState([]);\n\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks();\n      setTasks(tasksFromServer);\n    };\n\n    getTasks();\n  }, []);\n\n  const fetchTasks = async () => {\n    const res = await fetch(\"http://localhost:5000/tasks\");\n    const data = await res.json();\n\n    return data;\n  };\n\n  const fetchTask = async (id) => {\n    const res = await fetch(`http://localhost:5000/tasks/${id}`);\n    const data = await res.json();\n\n    return data;\n  };\n\n  const addTask = async (task) => {\n    // const id = Math.floor(Math.random() * 10000) + 1;\n    // const newTask = { id, ...task };\n    // setTasks([...tasks, newTask]);\n\n    const res = await fetch(\"http://localhost:5000/tasks/\", {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n      body: JSON.stringify(task),\n    });\n\n    const data = await res.json();\n\n    setTasks([...tasks, data]);\n  };\n\n  const deleteTask = async (id) => {\n    await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: \"DELETE\",\n    });\n\n    setTasks(tasks.filter((task) => task.id !== id));\n  };\n\n  const toggleReminder = async (id) => {\n    const taskToToggle = await fetchTask(id);\n    const updTask = { ...taskToToggle, reminder: !taskToToggle.reminder };\n\n    const res = await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n      body: JSON.stringify(updTask),\n    });\n\n    const data = await res.json();\n\n    setTasks(\n      tasks.map((task) =>\n        task.id === id\n          ? {\n              ...task,\n              reminder: data.reminder,\n            }\n          : task\n      )\n    );\n  };\n\n  return (\n    <Router>\n      <div className=\"container\">\n        <Header\n          onAdd={() => setShowAddTask(!showAddTask)}\n          showAdd={showAddTask}\n        />\n\n        <Route\n          path=\"/\"\n          exact\n          render={() => (\n            <>\n              {showAddTask && <AddTask onAdd={addTask} />}\n              {tasks.length > 0 ? (\n                <Tasks\n                  tasks={tasks}\n                  onDelete={deleteTask}\n                  onToggle={toggleReminder}\n                />\n              ) : (\n                \"No Tasks To Show\"\n              )}\n            </>\n          )}\n        />\n        <Route path=\"/about\" component={About} />\n        <Footer />\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}